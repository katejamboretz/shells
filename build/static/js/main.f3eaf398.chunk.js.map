{"version":3,"sources":["images/aaron-burden-1rVQGaA_toU-unsplash.jpg","images/aaron-burden-LMlVa3QDEXs-unsplash.jpg","images/andrew-buchanan-i4eEYLfZq-o-unsplash.jpg","images/axel-visoso-st1hkaZnZow-unsplash.jpg","images/francisco-camino-gonzalez-Fag6CbgA4Bc-unsplash.jpg","images/james-wainscoat-KLzcX9Pimy0-unsplash.jpg","images/nicole-elliott-Fs0_2Vnac_4-unsplash.jpg","images/peter-nicola-1V0ucpOq6D0-unsplash.jpg","images/pooya-5MYIKULVAOc-unsplash.jpg","images/pratik-patel-ABwLp9DVOhg-unsplash.jpg","images/stefan-kunze-xkua4kLZWO0-unsplash.jpg","images/nadieska-meza-siles-F8HbDs4srPE-unsplash.jpg","components/Header/index.js","components/Score/index.js","components/Card/index.js","components/Container/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","Score","props","style","width","score","highscore","Card","valuetest","src","imageTest","alt","name","id","key","onClick","photos","image1","image2","image3","image4","image5","image6","image7","image8","image9","image10","image11","image12","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","console","log","shells","forEach","element","i","Container","state","resetPage","componentDidMount","event","value","target","getAttribute","setState","this","map","shell","bind","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f3eaf398.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/aaron-burden-1rVQGaA_toU-unsplash.df203558.jpg\";","module.exports = __webpack_public_path__ + \"static/media/aaron-burden-LMlVa3QDEXs-unsplash.37925b6f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/andrew-buchanan-i4eEYLfZq-o-unsplash.7f56668f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/axel-visoso-st1hkaZnZow-unsplash.75ab1bbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/francisco-camino-gonzalez-Fag6CbgA4Bc-unsplash.dd301646.jpg\";","module.exports = __webpack_public_path__ + \"static/media/james-wainscoat-KLzcX9Pimy0-unsplash.8ef1d2cd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nicole-elliott-Fs0_2Vnac_4-unsplash.35605aab.jpg\";","module.exports = __webpack_public_path__ + \"static/media/peter-nicola-1V0ucpOq6D0-unsplash.4371bca4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pooya-5MYIKULVAOc-unsplash.59bf2f31.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pratik-patel-ABwLp9DVOhg-unsplash.68045510.jpg\";","module.exports = __webpack_public_path__ + \"static/media/stefan-kunze-xkua4kLZWO0-unsplash.d8ae286e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/nadieska-meza-siles-F8HbDs4srPE-unsplash.f0683261.jpg\";","import React from \"react\";\nimport \"./style.css\"\n\nfunction Header() {\n    return (\n        <div className=\"jumbotron jumbotron-fluid text-center\">\n            <div className=\"container\">\n                <h1 className=\"display-4\">Shells</h1>\n                <br></br>\n                <p className=\"lead\">Click on the shells - random shells will earn a point.</p>\n                <p className=\"lead\">How many points can you earn in a row?</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Score(props) {\n    return (\n        <div>\n            <div className=\"card text-center mx-auto m-3\" style={{ width: '18rem' }}>\n                <div className=\"card-body\">\n                    <h4>Total Score: {props.score}</h4>\n                    <h4>High Score: {props.highscore}</h4>\n                </div>\n            </div>\n        </div>\n    )\n}\n\n\nexport default Score;","import React from \"react\";\n\n\nfunction Card(props) {\n    return (\n        <div className=\"col\">\n            <div className=\"card mx-auto m-3\" style={{ width: '18rem' }}>\n                <img className=\"card-img-top\" valuetest={props.valuetest} src={props.imageTest} alt={props.name} id={props.id} key={props.id} name={props.name} onClick={props.onClick}></img>\n            </div >\n        </div>\n    )\n}\n\nexport default Card;","import React from \"react\";\nimport shells from \"../../shells.json\";\nimport Header from \"../Header\";\nimport Score from \"../Score\";\nimport Card from \"../Card\";\nimport image1 from \"../../images/aaron-burden-1rVQGaA_toU-unsplash.jpg\";\nimport image2 from \"../../images/aaron-burden-LMlVa3QDEXs-unsplash.jpg\"\nimport image3 from \"../../images/andrew-buchanan-i4eEYLfZq-o-unsplash.jpg\"\nimport image4 from \"../../images/axel-visoso-st1hkaZnZow-unsplash.jpg\"\nimport image5 from \"../../images/francisco-camino-gonzalez-Fag6CbgA4Bc-unsplash.jpg\"\nimport image6 from \"../../images/james-wainscoat-KLzcX9Pimy0-unsplash.jpg\"\nimport image7 from \"../../images/nicole-elliott-Fs0_2Vnac_4-unsplash.jpg\"\nimport image8 from \"../../images/peter-nicola-1V0ucpOq6D0-unsplash.jpg\"\nimport image9 from \"../../images/pooya-5MYIKULVAOc-unsplash.jpg\"\nimport image10 from \"../../images/pratik-patel-ABwLp9DVOhg-unsplash.jpg\"\nimport image11 from \"../../images/stefan-kunze-xkua4kLZWO0-unsplash.jpg\"\nimport image12 from \"../../images/nadieska-meza-siles-F8HbDs4srPE-unsplash.jpg\"\n\n// function Container() {\n//     return(<div>Where's my app at?</div>);\n// }\nconst photos = [image1, image2, image3, image4, image5, image6, image7, image8, image9, image10, image11, image12]\n// const point = []\n// shells.forEach(function (element, i) {\n//     element.imageTest = photos[i]\n// })\n// shells.forEach(function (element) {\n//     let rando = Math.floor(Math.random() * 12);\n//     tracker.push(rando)\n//     console.log(\"random number \" + rando)\n//     element.imageTest = photos[rando];\n//     element.valuetest = Math.floor(Math.random() * 1);\n// });\n\n// Source: https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\n\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n\n        // Pick a remaining element...\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n\n        // And swap it with the current element.\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n}\n\nfunction resetPage() {\n    console.log(\"page reset\");\n    shuffle(photos);\n    shells.forEach(function (element, i) {\n        element.imageTest = photos[i];\n        element.valuetest = Math.floor(Math.random() * 2);\n    });\n}\n\nresetPage();\n\nclass Container extends React.Component {\n\n    state = {\n        shells,\n        score: 0,\n        highscore: 0\n    };\n\n    shuffle = (array) => {\n        var currentIndex = array.length, temporaryValue, randomIndex;\n\n        // While there remain elements to shuffle...\n        while (0 !== currentIndex) {\n\n            // Pick a remaining element...\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n\n            // And swap it with the current element.\n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n\n        return array;\n    }\n\n    resetPage = () => {\n        console.log(\"page reset\");\n        shuffle(photos);\n        shells.forEach(function (element, i) {\n            element.imageTest = photos[i];\n            element.valuetest = Math.floor(Math.random() * 2);\n        });\n    }\n\n    componentDidMount = () => {\n        this.resetPage();\n    }\n\n    onClick = event => {\n        console.log(\"I've been clicked\")\n        const value = event.target.getAttribute(\"valuetest\")\n        console.log(\"Value: \" + value)\n        if (value === \"0\") {\n            if (this.state.score > this.state.highscore) {\n                this.setState(state => ({ highscore: this.state.score }))\n            }\n            this.setState(state => ({ score: 0 }));\n        }\n        else {\n            this.setState(state => ({ score: this.state.score + 1 }))\n        }\n        this.resetPage();\n    }\n\n\n    render() {\n        return (\n            <div>\n                <Header />\n                <Score score={this.state.score} highscore={this.state.highscore} />\n                <div className=\"row row-cols-*\">\n                    {this.state.shells.map(shell => (\n                        <Card\n                            id={shell.id}\n                            key={shell.id}\n                            name={shell.name}\n                            imageTest={shell.imageTest}\n                            valuetest={shell.valuetest}\n                            onClick={this.onClick.bind(this)}\n                        />))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Container;","import React from \"react\";\nimport \"./App.css\";\nimport Container from \"../src/components/Container\"\n\nfunction App() {\n  return (\n    <Container />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}